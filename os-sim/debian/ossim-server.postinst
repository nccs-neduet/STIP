#!/bin/sh
# postinst script for ossim-server
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

configure_db(){
    OSSIM_SETUP_CONF_FILE="/etc/ossim/ossim_setup.conf"
    SERVER_CONFIG_XML_FILE="/etc/ossim/server/config.xml"

    if [ -f "$OSSIM_SETUP_CONF_FILE" ] && [ -f "$SERVER_CONFIG_XML_FILE" ]; then
        HOSTNAME=$(grep "^hostname=.*" "$OSSIM_SETUP_CONF_FILE" | cut -d "=" -f 2)
        DB_IP=$(grep "^db_ip=.*" "$OSSIM_SETUP_CONF_FILE" | cut -d "=" -f 2)
        DB_USER=$(grep "^user=.*" "$OSSIM_SETUP_CONF_FILE" | cut -d "=" -f 2)
        DB_PASS=$(grep "^pass=.*" "$OSSIM_SETUP_CONF_FILE" | cut -d "=" -f 2)
        ADMIN_IP=$(grep "^admin_ip=.*" "$OSSIM_SETUP_CONF_FILE" | cut -d "=" -f 2)
        SYSTEM_ID=$(/usr/bin/alienvault-system-id)

        sed -i "s:<server .*:<server port=\"40001\" name=\"$HOSTNAME\" ip=\"0.0.0.0\" id=\"$SYSTEM_ID\"\/>:" "$SERVER_CONFIG_XML_FILE"
        sed -i "s:<framework .*:<framework name=\"$HOSTNAME\"  ip=\"$ADMIN_IP\" port=\"40003\"\/>:" "$SERVER_CONFIG_XML_FILE"
        sed -i "s:<datasource name=\"ossimDS\" .*:<datasource name=\"ossimDS\" provider=\"MySQL\" dsn=\"PORT=3306;USER=$DB_USER;PASSWORD=$DB_PASS;DATABASE=alienvault;HOST=$DB_IP\"\/>:" "$SERVER_CONFIG_XML_FILE"
        sed -i "s:<datasource name=\"snortDS\" .*:<datasource name=\"snortDS\" provider=\"MySQL\" dsn=\"PORT=3306;USER=$DB_USER;PASSWORD=$DB_PASS;DATABASE=alienvault_siem;HOST=$DB_IP\"\/>:" "$SERVER_CONFIG_XML_FILE"
        sed -i "s:<datasource name=\"osvdbDS\" .*:<datasource name=\"osvdbDS\" provider=\"MySQL\" dsn=\"PORT=3306;USER=$DB_USER;PASSWORD=$DB_PASS;DATABASE=alienvault_siem;HOST=$DB_IP\"\/>:" "$SERVER_CONFIG_XML_FILE"

        # Update config.xml permissions
        chown avserver:alienvault "$SERVER_CONFIG_XML_FILE"
    fi
}

configure_reputation_data(){
    REPUTATION_DATA_FILE="/etc/ossim/server/reputation.data"
    REPUTATION_DATA_STATS_FILE="/etc/ossim/server/reputation.data.stats"

    [ -f "$REPUTATION_DATA_FILE" ] || touch "$REPUTATION_DATA_FILE"
    chgrp alienvault "$REPUTATION_DATA_FILE"
    chmod g+w "$REPUTATION_DATA_FILE"

    [ -f "$REPUTATION_DATA_STATS_FILE" ] || touch "$REPUTATION_DATA_STATS_FILE"
    chgrp alienvault "$REPUTATION_DATA_STATS_FILE"
    chmod g+w "$REPUTATION_DATA_STATS_FILE"
}

case "$1" in
    configure)
        ETC_DIR="/etc/ossim/server"
        LOG_DIR="/var/log/alienvault/server"
        VAR_DIR="/var/alienvault"
        RUN_DIR="/var/run/alienvault"
	    HOME_SERVER="/home/avserver"

        # Configure firewall
        dpkg-trigger --no-await alienvault-restart-firewall

        # Create user, group and log directories, if needed.
	    if ! getent group alienvault > /dev/null; then
		    addgroup --quiet --system alienvault
	    fi
	    if ! getent passwd avserver > /dev/null; then
		    adduser  --system --ingroup alienvault --gecos "AlienVault Server" --no-create-home avserver
	    fi


        chmod 0770 "$ETC_DIR"
	    chown -R avserver:alienvault "$ETC_DIR"

	    [ -d "$LOG_DIR" ] || mkdir -p -m 0750 "$LOG_DIR"
	    chown -R avserver:alienvault "$LOG_DIR"

        configure_db

        # Add permissions to allow avserver user to read the system_id.
        grep --fixed-strings --quiet "avserver ALL=NOPASSWD: /usr/bin/alienvault-system-id" /etc/sudoers || echo "avserver ALL=NOPASSWD: /usr/bin/alienvault-system-id" >> /etc/sudoers

        # Add permissions to allow www-data to restart the server.
        grep --fixed-strings --quiet "www-data ALL=NOPASSWD: /etc/init.d/ossim-server restart" /etc/sudoers || echo "www-data ALL=NOPASSWD: /etc/init.d/ossim-server restart" >> /etc/sudoers

        # Add permissions to allow www-data to restart the alienvault-forward
        grep --fixed-strings --quiet "www-data ALL=NOPASSWD: /etc/init.d/alienvault-forward restart" /etc/sudoers || echo "www-data ALL=NOPASSWD: /etc/init.d/alienvault-forward restart" >> /etc/sudoers

        # Create cache directories
        [ -d "$VAR_DIR" ] || mkdir -p -m 0770 "$VAR_DIR"
        [ -d "$VAR_DIR/server" ] || mkdir -p -m 0770 "$VAR_DIR/server"
        [ -d "$VAR_DIR/server/cache" ] || mkdir -p -m 0770 "$VAR_DIR/server/cache"
        chmod 0774 $(find "$VAR_DIR" -type d)
        chgrp alienvault "$VAR_DIR" -R
        chown -R avserver:alienvault "$VAR_DIR/server"

        # Create 'run' directories (for PID).
        [ -d "$RUN_DIR" ] || mkdir -p -m 0770 "$RUN_DIR"
        chgrp -R alienvault "$RUN_DIR"

	    # Create a server home (for gda stuff)
	    [ -d "$HOME_SERVER" ] || mkdir -p -m 0755 "$HOME_SERVER"
	    chown -R avserver.alienvault "$HOME_SERVER"

	    # Reputation.data file
	    configure_reputation_data

        ;;

    triggered)
        for trigger in $2
        do
            case "$trigger" in
                alienvault-config-system-admin-ip|alienvault-config-system-vpn-ip)
                    configure_db
                    ;;
                alienvault-config-database-pass)
                    configure_db
                    ;;
                *)
                    echo "postinst called with unknown trigger \`$2'">&2
                    exit 1
                ;;
            esac
        done
        ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

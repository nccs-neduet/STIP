-- MySQL Script generated by MySQL Workbench
-- Fri Mar 13 12:14:26 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_ALL_TABLES,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema alienvault_api
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `current_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `current_status` (
  `id` BINARY(16) NOT NULL,
  `message_id` BINARY(16) NOT NULL,
  `component_id` BINARY(16) NULL,
  `component_type` ENUM('net', 'host', 'user', 'sensor', 'server','system','external') NOT NULL,
  `creation_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '(CURRENT_TIMESTAMP | on create CURRENT_TIMESTAMP )\n',
  `viewed` TINYINT(1) NULL DEFAULT 0,
  `suppressed` TINYINT(1) NULL DEFAULT 0 COMMENT 'True or False. Indicates that this kind of message over this component id is disabled.',
  `suppressed_time` TIMESTAMP NULL,
  `additional_info` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `message` (`message_id` ASC),
  INDEX `component` (`component_id` ASC),
  INDEX `viewed` (`viewed` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logged_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logged_actions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `logged_user` VARCHAR(45) NULL,
  `datetime` TIMESTAMP NULL,
  `action_description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `monitor_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitor_data` (
  `component_id` BINARY(16) NOT NULL,
  `timestamp` TIMESTAMP NOT NULL,
  `monitor_id` INT NOT NULL,
  `data` TEXT NULL,
  `component_type` VARCHAR(55) NULL COMMENT 'Component type. (net, host, â€¦)',
  PRIMARY KEY (`component_id`, `timestamp`, `monitor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `celery_job`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `celery_job` (
  `id` BINARY(16) NOT NULL,
  `info` BLOB NULL,
  `last_modified` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `status_message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `status_message` (
  `id` BINARY(16) NOT NULL,
  `level` TINYINT(1) NOT NULL DEFAULT 1,
  `title` TEXT NULL,
  `description` TEXT NULL,
  `type` VARCHAR(20) NOT NULL,
  `expire` DATETIME NULL,
  `actions` TEXT NULL,
  `alternative_actions` TEXT NULL,
  `message_role` TEXT NULL,
  `action_role` TEXT NULL,
  `source` VARCHAR(32) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_perms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_perms` (
  `login` VARCHAR(64) NOT NULL,
  `component_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`login`, `component_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- procedure fill_user_perms
-- -----------------------------------------------------

DELIMITER $$
CREATE PROCEDURE fill_user_perms (IN login VARCHAR(64)) 
BEGIN
    SET @user = login;
    DELETE FROM user_perms WHERE user_perms.login=@user;
    IF EXISTS (SELECT 1 FROM alienvault.users WHERE users.login=@user) THEN
        CALL alienvault.acl_user_permissions(@user);
        INSERT INTO user_perms VALUES (@user, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);
        SELECT NOT EXISTS (SELECT 1 FROM alienvault.user_host_perm WHERE user_host_perm.login=@user AND asset_id=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) INTO @hosts;
        SELECT NOT EXISTS (SELECT 1 FROM alienvault.user_net_perm WHERE user_net_perm.login=@user AND asset_id=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) INTO @nets;
        IF @hosts THEN
            INSERT IGNORE INTO user_perms SELECT @user,asset_id FROM alienvault.user_host_perm WHERE user_host_perm.login=@user;
            IF @nets THEN
                INSERT IGNORE INTO user_perms SELECT @user,asset_id FROM alienvault.user_net_perm WHERE user_net_perm.login=@user;
                INSERT IGNORE INTO user_perms SELECT @user,host_id FROM alienvault.host_net_reference, alienvault.user_net_perm WHERE host_net_reference.net_id=user_net_perm.asset_id AND user_net_perm.login=@user;
            END IF;
        ELSE
            IF @nets THEN
                INSERT IGNORE INTO user_perms SELECT @user,asset_id FROM alienvault.user_net_perm WHERE user_net_perm.login=@user;
                INSERT IGNORE INTO user_perms SELECT @user,host_id FROM alienvault.host_net_reference, alienvault.user_net_perm WHERE host_net_reference.net_id=user_net_perm.asset_id AND user_net_perm.login=@user;
            ELSE
                INSERT IGNORE INTO user_perms SELECT @user,id FROM alienvault.host;
                INSERT IGNORE INTO user_perms SELECT @user,id FROM alienvault.net;
            END IF;
        END IF;
        INSERT IGNORE INTO user_perms SELECT @user,sensor_id FROM alienvault.user_sensor_perm WHERE user_sensor_perm.login=@user;
    END IF;
    SELECT COUNT(component_id) as entries FROM user_perms WHERE user_perms.login=@user;
END$$

DELIMITER ;

DELIMITER $$
CREATE TRIGGER `delete_cs` BEFORE DELETE ON `status_message` FOR EACH ROW
-- Edit trigger body code below this line. Do not edit lines above this one
BEGIN

  DELETE FROM current_status WHERE message_id = OLD.id;
  
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

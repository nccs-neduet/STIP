#!/bin/sh

set -e

CONFIGFILE=/etc/ossim/ossim_setup.conf

if [ -f "$CONFIGFILE" ]; then
    exit 0
fi

. /usr/share/debconf/confmodule

# get all interfaces
#cat /proc/net/dev | tail -n +3 | grep -v lo | cut -d':' -f1 | tr -d ' ' | tr '\n' ',' | sed -e 's/,$//'

is_valid_ip () {
  RE_IPV4="((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])"

  RE_IPV6="([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|"                     # TEST: 1:2:3:4:5:6:7:8
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,7}:|"                          # TEST: 1:: 1:2:3:4:5:6:7::
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|"          # TEST: 1::8 1:2:3:4:5:6::8 1:2:3:4:5:6::8
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|"   # TEST: 1::7:8 1:2:3:4:5::7:8 1:2:3:4:5::8
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|"   # TEST: 1::6:7:8 1:2:3:4::6:7:8 1:2:3:4::8
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|"   # TEST: 1::5:6:7:8 1:2:3::5:6:7:8 1:2:3::8
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|"   # TEST: 1::4:5:6:7:8 1:2::4:5:6:7:8 1:2::8
  RE_IPV6="${RE_IPV6}[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|"        # TEST: 1::3:4:5:6:7:8 1::3:4:5:6:7:8 1::8
  RE_IPV6="${RE_IPV6}:((:[0-9a-fA-F]{1,4}){1,7}|:)|"                      # TEST: ::2:3:4:5:6:7:8 ::2:3:4:5:6:7:8 ::8 ::
  RE_IPV6="${RE_IPV6}fe08:(:[0-9a-fA-F]{1,4}){2,2}%[0-9a-zA-Z]{1,}|"      # TEST: fe08::7:8%eth0 fe08::7:8%1 (link-local IPv6 addresses with zone index)
  RE_IPV6="${RE_IPV6}::(ffff(:0{1,4}){0,1}:){0,1}${RE_IPV4}|"             # TEST: ::255.255.255.255 ::ffff:255.255.255.255 ::ffff:0:255.255.255.255 (IPv4-mapped IPv6 addresses and IPv4-translated addresses)
  RE_IPV6="${RE_IPV6}([0-9a-fA-F]{1,4}:){1,4}:${RE_IPV4}"                 # TEST: 2001:db8:3:4::192.0.2.33

  RE_IP="((${RE_IPV4})|(${RE_IPV6}))"

  echo $1 | egrep --quiet ${RE_IP}
  return $?
}

db_input critical alienvault-dummy-common/profiles || true
db_go || true

db_input critical alienvault-dummy-common/hostname || true
db_go || true

while true
do
  db_input critical alienvault-dummy-common/server_ip || ( [ $? -eq 30 ] && break )
  db_go || true
  db_get alienvault-dummy-common/server_ip
  if is_valid_ip "$RET"
  then
    break
  else
    db_input critical alienvault-dummy-common/bad_ip
    db_capb backup
    db_go || true
  fi
done

while true
do
  db_input critical alienvault-dummy-common/database_ip || ( [ $? -eq 30 ] && break )
  db_go || true
  db_get alienvault-dummy-common/database_ip
  if is_valid_ip "$RET"
  then
    break
  else
    db_input critical alienvault-dummy-common/bad_ip
    db_capb backup
    db_go || true
  fi
done

#FIXME: these values are fixed ATM, later it is necessary to check that the two passwords are the same 
#db_input high alienvault-dummy-common/database_user
#db_input high alienvault-dummy-common/database_pass

db_input critical alienvault-dummy-common/sensor_interfaces || true
db_go || true
db_input critical alienvault-dummy-common/sensor_detectors || true
db_go || true
db_input critical alienvault-dummy-common/sensor_monitors || true
db_go || true
